
import * as React from "react";
import { useState, useEffect } from "react";
import { reactiveUtils, FeatureLayer, ArcGISJavaScriptAPI } from "jimu-core";

const Widget: React.FC = () => {
  // Hardcode the layer IDs and website URL
  const layerIds = ["your-layer-id-1", "your-layer-id-2"]; // Replace with actual layer IDs
  const websiteURL = "https://your-website.com"; // Replace with your website URL

  const [selectedFeatures, setSelectedFeatures] = useState<any[]>([]);

  // Monitor layer selections
  useEffect(() => {
    const layers = layerIds.map((id) => ArcGISJavaScriptAPI.findLayerById(id));

    const handleSelectionChange = () => {
      const allSelectedFeatures = layers.flatMap((layer) => layer.selectedFeatures || []);
      setSelectedFeatures(allSelectedFeatures);
    };

    // Listen for selection changes on all layers
    const watchers = layers.map((layer) =>
      reactiveUtils.watch(
        () => layer.selectedFeatures,
        () => handleSelectionChange()
      )
    );

    // Cleanup watchers on unmount
    return () => watchers.forEach((watcher) => watcher.remove());
  }, [layerIds]);

  // Open website with selected features
  const openWebsite = () => {
    const featuresJSON = JSON.stringify(selectedFeatures, (key, value) => {
      if (value && typeof value === "object" && "geometry" in value) {
        return {
          attributes: value.attributes,
          geometry: value.geometry.toJSON(), // Simplify geometry
        };
      }
      return value;
    });

    const encodedFeatures = encodeURIComponent(featuresJSON);
    const urlWithFeatures = `${websiteURL}?features=${encodedFeatures}`;

    // Open the website in a new tab
    window.open(urlWithFeatures, "_blank");
  };

  return (
    <div>
      <button onClick={openWebsite} disabled={selectedFeatures.length === 0}>
        Open Website with {selectedFeatures.length} Selected Features
      </button>
    </div>
  );
};

export default Widget;


