<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ArcGIS Map Page</title>
   
    <link href=" https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- ArcGIS JS API CSS -->
    <link rel="stylesheet" href="https://js.arcgis.com/4.32/esri/themes/light/main.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- ArcGIS JS API JS -->
    <script src="https://js.arcgis.com/4.32/"></script>
    <style>
        /* Full width nav bar with 100px height */
        .navbar {
            height: 60px;
            background-color: #007ac2;
            /* Material purple */
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .navbar a.navbar-brand {
            color: white;
        }

        .navbar .navbar-nav .nav-link {
            color: white !important;
        }

        .navbar .navbar-nav .nav-link:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        /* Aside section with 30% width */
        .aside-section {
            width: 30%;
            background-color: #f5f5f5;
            /* Light gray */
            padding: 0px;
            border-radius: 8px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Content section with 70% width */
        .content-section {
            width: 70%;
            padding: 0px;
            height: calc(100vh - 70px);
            /* Full height minus navbar */
            display: flex;
            flex-direction: column;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Make the tab content area take full available height */
        .tab-content {
            flex: 1;
            overflow-y: auto;
            /* Enable vertical scroll if content overflows */
        }

        /* Tab Links */
        .nav-tabs {
            margin-bottom: 0px;
            border: none;
        }


        /* Tab Content */
        .tab-pane {
            padding: 0px;
            background-color: white;
            border-radius: 4px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        /* Map container should take full height */
        #mapViewDiv {
            height: 100%;
        }

        /* Small spacing for the bottom div */
        #legendDiv {
            margin-top: 20px;
        }

        .esri-print {
          position: relative;
           padding: 0px !important;
            overflow-y: auto;
         }
           .card-body {
             height: calc(100vh - 110px);
            max-height: calc(100vh - 110px);
             overflow-y: auto; /* Enables vertical scrolling */
         }
        .custom-toolbar {
            padding-top: 5px;
            border-radius: 5px;
            /* box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2); */
            z-index: 10;
            text-align: right;
        }
        .text-edit-toolbar {
            float: right;
            width: 400px;
            display: none;
            background: white;
            padding: 10px;
            border-radius: 5px;
             box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2); 
            margin-top: 10px;
        }
        .color-edit-toolbar {
            float: right;
            width: 120px;
            border-radius: 5px;
            z-index: 10;
            text-align: right;
            display: none;
            background: white;
            padding: 10px;
            border-radius: 5px;
             box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2); 
            margin-top: 10px;
        }

        .esri-component{
            text-align: right;
        }

        .esri-ui-corner{
            display: none;
        }


    </style>
</head>

<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="#"> Demo drawing sketch </a>
        </div>
    </nav>

    <!-- Main Container -->
    <div class="container-fluid">
        <div class="row">
            <!-- Aside Section (30% width) -->
            <div class="col-md-3 aside-section">
            <div class="container shadow" style="padding: 0;">
            <!-- Horizontal Tabs -->
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="home-tab" data-bs-toggle="tab" href="#home" role="tab" aria-controls="home"
                        aria-selected="true"><i class="fa-solid fa-pencil"></i></a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#profile" role="tab" aria-controls="profile"
                        aria-selected="false"><i class="fa-solid fa-folder-open"></i></a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="print-tab" data-bs-toggle="tab" href="#print" role="tab" aria-controls="print"
                        aria-selected="false"><i class="fa-solid fa-print"></i></a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="Basemaps-tab" data-bs-toggle="tab" href="#Basemaps" role="tab" aria-controls="Basemaps"
                        aria-selected="false"><i class="fa-solid fa-grip"></i></a>
                </li>
            </ul>

            
            
            <!-- Tab Content -->
            <div class="tab-content" id="myTabContent">
   
                 <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <div class="card">
                       <div class="card-body">
                     <div class="mb-3">
                        <label for="formGroupExampleInput" class="form-label">Example label</label>
                        <input type="text" class="form-control" id="formGroupExampleInput" placeholder="Example input placeholder">
                    </div>
                    <div class="mb-3">
                        <label for="formGroupExampleInput1" class="form-label">Example label</label>
                        <input type="text" class="form-control" id="formGroupExampleInput1" placeholder="Example input placeholder">
                    </div>
                    <div class="mb-3">
                        <label for="formGroupExampleInput2" class="form-label">Example label</label>
                        <input type="text" class="form-control" id="formGroupExampleInput2" placeholder="Example input placeholder">
                    </div>
                    <div class="mb-3">
                        <label for="formGroupExampleInput3" class="form-label">Another label</label>
                        <input type="text" class="form-control" id="formGroupExampleInput3" placeholder="Another input placeholder">
                    </div>
                      <div class="mb-3 d-flex align-items-center gap-3">
                       <button class="btn btn-success">Save</button>
                      <div class="form-check form-switch">
                       <input class="form-check-input" type="checkbox" id="toggleSketchToolbar">
                    <label class="form-check-label" for="toggleSketchToolbar" id="toggleSketchToolbarlbl">Start Drawing</label>
                     </div>
                     </div>
                      </div>
                   </div>
            
                </div>
                <!-- Profile Tab Content -->
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    <div class="card">
                        <div class="card-body">
                          <div id="BookmarksDiv"></div>
                        </div>
                    </div>
                </div>
            
            
                <!-- Contact Tab Content -->
                <div class="tab-pane fade" id="print" role="tabpanel" aria-labelledby="print-tab">
                     <div class="card" >
                       <div class="card-body" style="padding: 0;">
                      <div id="PrintDiv"></div>
                      </div>
                   </div>
                    
                 </div>     
                                 <!-- Contact Tab Content -->
                <div class="tab-pane fade" id="Basemaps" role="tabpanel" aria-labelledby="Basemaps-tab">
                     <div class="card">
                       <div class="card-body">
                      <div id="BasemapDiv"></div>
                      </div>
                   </div>
                    
                 </div>               
              </div>

            </div>
    
                
            </div>


            <div class="col-md-9 content-section">

                <div id="mapViewDiv">


                </div>
            </div>
        </div>
    </div>

    <script>

        require([
            "esri/views/MapView",
            "esri/widgets/Print",
            "esri/WebMap",
             "esri/widgets/BasemapGallery",
             "esri/Basemap",
            "esri/layers/GraphicsLayer",
            "esri/widgets/Sketch",
            "esri/symbols/TextSymbol",
            "esri/symbols/SimpleLineSymbol",
            "esri/Graphic",
            "esri/PopupTemplate",
            // "dojo/domReady!"
        ], function (MapView, Print, WebMap, BasemapGallery, Basemap, GraphicsLayer , Sketch,TextSymbol,SimpleLineSymbol,Graphic,PopupTemplate) {

             const graphicsLayer = new GraphicsLayer();            
              let textToolEnabled = false;
              let selectedGraphic = null;

            var webmap = new WebMap({
                portalItem: { // Replace with your actual PortalItem ID
                    id: "4abe6a830b8f466dacf8abfde567a781"
                },
                layers: [graphicsLayer]
            });

            var view = new MapView({
                container: "mapViewDiv",
                map: webmap
            });

            view.when(function () {
                var featureLayer = webmap.layers.getItemAt(0);

                var print = new Print({
                    view: view
                }, "PrintDiv");

                 print.when(function () {
                     let inputElement = document.querySelector('.esri-print__input-text.esri-input');
                     inputElement.value = 'New Value';

                 })

                   const basemapGallery = new BasemapGallery({
                   view: view
                   }, "BasemapDiv");

                const sketch = new Sketch({
                view: view,
                layer: graphicsLayer
               });

               view.ui.add(sketch, "top-right");


            sketch.on("create", function (event) {
                if (event.state === "complete") {
                     const newGraphic = event.graphic;
                    console.log("GraphicLayer",graphicsLayer)
                 reset_textToolBtn()
                 disableSketch()
              
                    // graphicsLayer.add(newGraphic);
                }
            });

              sketch.on("active-tool-change", function(event) {
                 reset_textToolBtn()
                 console.log("active-tool-change")
              });

              function reset_textToolBtn(){
                     textToolEnabled = false;
                document.getElementById("textToolBtn").innerHTML = '<i class="fa-solid fa-t"></i>';
                document.getElementById("textToolBtn").className = "btn btn-light";           
                view.container.style.cursor = "default";
                 selectedGraphic = null;
                 document.getElementById("textEditToolbar").style.display = "none";
                 document.getElementById("colorEditToolbar").style.display = "none";
              }

               
             function disableSketch() {
                sketch.activeTool = null;
                let selectElement = document.querySelector(".esri-sketch__tool");
                if (selectElement) {
                selectElement.selectedIndex = -1;  
                selectElement.dispatchEvent(new Event("change"));  
                }
                sketch.cancel();
               console.log("Sketch widget disabled");
                }





            // Toolbar UI
            const textEditToolbar = document.createElement("div");
           
            textEditToolbar.innerHTML = `
                <div class="custom-toolbar">
                    <button id="textToolBtn" class="btn btn-light" ><i class="fa-solid fa-t"></i></button>
                </div>
                <div class="text-edit-toolbar" id="textEditToolbar">
                    <label>Color:</label>
                    <input type="color" id="textColor" value="#000000">
                    <label>Size:</label>
                    <input type="number" id="textSize" min="8" max="50" value="14">
                    <label>Rotate:</label>
                    <input type="range" id="rotationSlider" min="0" max="360" value="0">
                </div>
            `;
               const colorEditToolbar = document.createElement("div");
                colorEditToolbar.innerHTML = `
               <div class="color-edit-toolbar" id="colorEditToolbar" style="display:none;">
               <label>Color:</label>
              <input type="color" id="colorPicker" value="#000000">
              </div>
              `;





            view.ui.add(textEditToolbar, "top-right");
            view.ui.add(colorEditToolbar, "top-right");


            document.getElementById("toggleSketchToolbar").addEventListener("click", function () {
             let label = document.getElementById("toggleSketchToolbarlbl");
            if (toggleSketchToolbar.checked) {
               document.querySelector(".esri-ui-top-right.esri-ui-corner").style.display = "block";
                label.innerText = "Stop Drawing";
            } else {
                 label.innerText = "Start Drawing";
               document.querySelector(".esri-ui-top-right.esri-ui-corner").style.display = "none";
               reset_textToolBtn()
               document.getElementById("colorEditToolbar").style.display = "none";
               disableSketch()

            }
        })


            // Toggle text tool
            document.getElementById("textToolBtn").addEventListener("click", function () {
                sketch.activeTool = null;
                textToolEnabled = !textToolEnabled;
                if(textToolEnabled){
                disableSketch()
                 document.getElementById("colorEditToolbar").style.display = "none";
                 this.textContent ="Click on the Map"
                 view.container.style.cursor = "pointer"
                 document.getElementById("textToolBtn").className = "btn btn-secondary";
                }else{
                 reset_textToolBtn()
                }
            });

            // Add text annotation on map click
            view.on("click", function (event) {
                if (textToolEnabled) {
                    const userText = prompt("Enter annotation text:");
                    if (userText) {
                        const textGraphic = new Graphic({
                            geometry: event.mapPoint,
                            symbol: new TextSymbol({
                                text: userText,
                                color: "black",
                                haloColor: "white",
                                haloSize: "2px",
                                font: { size: 14, family: "Arial", weight: "bold" }
                            })
                        });
                        graphicsLayer.add(textGraphic);
                    }
                    textToolEnabled = false;
                    document.getElementById("textToolBtn").innerHTML = '<i class="fa-solid fa-t"></i>';
                    document.getElementById("textToolBtn").className = "btn btn-light";
                    
                    view.container.style.cursor = "default";
                }
            });


            view.on("click", function (event) {

             view.hitTest(event).then(function (response) {
                 if (response.results.length > 0) {
                  const graphic = response.results[0].graphic;
                   if (graphic && graphic.symbol && graphic.symbol.type === "text") {
                      selectedGraphic = graphic;
                      document.getElementById("textColor").value = graphic.symbol.color.toHex();
                      document.getElementById("textSize").value = graphic.symbol.font.size;
                      document.getElementById("rotationSlider").value = graphic.symbol.angle || 0;
                      document.getElementById("textEditToolbar").style.display = "block";
                      document.getElementById("colorEditToolbar").style.display = "none";
                     return
                     } else {
                   selectedGraphic = null;
                   document.getElementById("textEditToolbar").style.display = "none";
               }

               if (graphic && graphic.symbol && (graphic.geometry.type === "point" || graphic.geometry.type === "polyline" || graphic.geometry.type === "polygon")) {
                if (graphic.geometry.type === "point" ){
                    selectedGraphic = response.results[0].graphic;
                }else {
                   selectedGraphic = response.results[1].graphic;
                }
                     
                document.getElementById("colorEditToolbar").style.display = "block";
            }else{
                selectedGraphic = null;
                document.getElementById("colorEditToolbar").style.display = "none";
            }
        } else {
            selectedGraphic = null;
            document.getElementById("colorEditToolbar").style.display = "none";
            document.getElementById("textEditToolbar").style.display = "none";

        }

         });
            });

       document.getElementById("colorPicker").addEventListener("input", function (event) {
             if (selectedGraphic) {
               const newColor = event.target.value;
                   console.log('selectedGraphic',selectedGraphic)
                let newSymbol;
            if (selectedGraphic.geometry.type === "polygon" || selectedGraphic.geometry.type === "polyline") {
                 
                          newSymbol = selectedGraphic.symbol.clone(); 
                         newSymbol.outline.color = event.target.value; 
                          selectedGraphic.symbol = newSymbol; 

        } else if (selectedGraphic.geometry.type === "point") {
            newSymbol = selectedGraphic.symbol.clone();
            newSymbol.color = newColor; 
        }
        selectedGraphic.symbol = newSymbol;
    }
});  


         
            document.getElementById("textColor").addEventListener("input", function (event) {
                if (selectedGraphic) {
                          let newSymbol = selectedGraphic.symbol.clone(); 
                         newSymbol.color = event.target.value; 
                          selectedGraphic.symbol = newSymbol; 
                }
            });

            document.getElementById("textSize").addEventListener("input", function (event) {
                if (selectedGraphic) {
                            let newSymbol = selectedGraphic.symbol.clone(); 
                           newSymbol.font.size = parseInt(event.target.value, 10); 
                            selectedGraphic.symbol = newSymbol; 
                }
            });


            document.getElementById("rotationSlider").addEventListener("input", function (event) {
                if (selectedGraphic) {
                 const angle = event.target.value;
                 selectedGraphic.symbol = new TextSymbol({
                 text: selectedGraphic.symbol.text,
                 color: selectedGraphic.symbol.color,
                 haloColor: selectedGraphic.symbol.haloColor,
                 haloSize: selectedGraphic.symbol.haloSize,
                 font: selectedGraphic.symbol.font,
                 angle: angle
               });
              }
           });

        });
    });
    </script>
</body>

</html>
